
set nocompatible
filetype plugin on

" Gestion des plugins
" ____________________
" 
" Attention de bien vérifier que le programme curl est bien installé !
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

call plug#begin()

    "Vim HardTime
    "Plug 'takac/vim-hardtime'
    Plug 'tclem/vim-arduino'
    Plug 'vimwiki/vimwiki'

call plug#end()

set title "Met à jour le titre de la fenetre
set number "Affiche le numéro de ligne
set ruler "Affiche le numéro de ligne 
set wrap  "Remet à la ligne les lignes trop longues


"Encodage en utf-8 
set encoding=utf-8
set fileencoding=utf-8

"Affiche numéro de ligne en nombre relatifs
:set number relativenumber

"Indentation
set autoindent "Auto-indentation des nouvelles lignes
set expandtab  " Remplace les tabulations par des espaces 
set shiftwidth=4 " auto indentation de 4 espaces
set smartindent 
set smarttab
set softtabstop=4 "Tabulation = 4 espaces 

" Recherche 
set ignorecase 
set smartcase "Si une recherche contien une majustcule, on réactive la sensibilité à la casse 

set incsearch "surligne les résultats pendant la saisie
set hlsearch  "surligne les résultats de la recherche

set visualbell "Empeche Vim de beeper
set noerrorbells "Empeche vim de beeper

"Active le comportemen 'habituel' de la touche retour en arrière 
set backspace=indent,eol,start

"Active la coloration syntaxique
syntax enable
syntax on

set background=dark
colorscheme desert

"change coloration pour le surlignement de la recherche (ne fonctionne que
"pour les consoles collorées
hi Search cterm=NONE ctermfg=DarkGrey ctermbg=lightMagenta
hi IncSearch cterm=NONE ctermfg=DarkGrey ctermbg=lightGreen


"Configuration de Hard-time
let g:hardtime_default_on = 1
let g:list_of_normal_keys = ["t", "s", "r", "n", "-", "+", "<UP>", "<DOWN>", "<LEFT>", "<RIGHT>"]
let g:list_of_visual_keys = ["c", "t", "s", "r", "-", "+", "<UP>", "<DOWN>", "<LEFT>", "<RIGHT>"]
let g:list_of_insert_keys = ["<UP>", "<DOWN>", "<LEFT>", "<RIGHT>"]
let g:list_of_disabled_keys = []
let g:hardtime_showmsg = 1
let g:hardtime_allow_different_key = 1

"Desactivation des touches directionnelles
map <up> <nop>
map <down> <nop>
map <left> <nop>
map <right> <nop>
imap <up> <nop>
imap <down> <nop>
imap <left> <nop>
imap <right> <nop>

let mapleader = "'"
set hidden

"ajout des modifications du clavier bépo

"Remap de la touche échap
:imap ,, <Esc>
:map ,, <Esc>

" {W} -> [É]
" ——————————
" On remappe W sur É :
" noremap é w
" noremap É W


" Corollaire: on remplace les text objects aw, aW, iw et iW
" pour effacer/remplacer un mot quand on n’est pas au début (daé / laé).
" noremap aé aw
" noremap aÉ aW
" noremap aè at
" noremap ié iw
" noremap iÉ iW
" noremap iè it 
" " Pour faciliter les manipulations de fenêtres, on utilise {W} comme un Ctrl+W :
" noremap w <C-w>
" noremap W <C-w><C-w>
 
" [HJKL] -> {TSRN}
" ————————————————
" {cr} = « gauche / droite »
"noremap t h
"noremap n l
" {ts} = « haut / bas »
"noremap s j
"noremap r k
" {CR} = « haut / bas de l'écran »
"noremap T H
"noremap N L
" {TS} = « joindre / aide »
"noremap S J
"noremap N K
 
" {HJKL} <- [TSRN]
" ————————————————
" {J} = « Jusqu'à »            (j = suivant, J = précédant)
"noremap j t
"noremap J T
" {H} = « Remplace »           (h = un caractère slt, H = reste en « Remplace »)
"noremap h r
"noremap H R
" {K} = « next search »          (k = caractère, K = ligne)
"noremap k n
"noremap K n
" Corollaire : correction orthographique
"noremap ]k ]s
"noremap [k [s


" Désambiguation de {g}
" —————————————————————
" ligne écran précédente / suivante (à l'intérieur d'une phrase)
"noremap gs gk
"noremap gt gj
" onglet précédant / suivant
"noremap gb gT
"noremap gé gt
" optionnel : {gB} / {gÉ} pour aller au premier / dernier onglet
"noremap gB :exe "silent! tabfirst"<CR>
"noremap gÉ :exe "silent! tablast"<CR>
" optionnel : {g"} pour aller au début de la ligne écran
"noremap g" g0
 
" <> en direct
" ————————————
noremap « <
noremap » >
noremap <tab> >>
noremap <S-tab> <<
 
" Remaper la gestion des fenêtres
" ———————————————————————————————
"noremap ws <C-w>j
"noremap wr <C-w>k
"noremap wt <C-w>h
"noremap wn <C-w>l
"noremap wd <C-w>c
"noremap wo <C-w>s
"noremap wp <C-w>o
"noremap w<SPACE> :split<CR>
"noremap w<CR> :vsplit<CR>



" Remappage des touches bépo pour l'utilisation de netrw
" ____________________________________________________ 
if has("autocmd")
augroup netrw_dvorak_fix
    autocmd!
    autocmd filetype netrw call Fix_netrw_maps_for_dvorak()
augroup END
function! Fix_netrw_maps_for_dvorak()
    noremap <buffer> s j
    noremap <buffer> r k
    noremap <buffer> k s
endfunction
endif

